function Map.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 15
push constant 32
call Math.multiply 2
call Array.new 1
pop this 0
push pointer 0
push argument 0
push argument 1
call Map.configmap 3
pop temp 0
push pointer 0
return
function Map.converttoX 0
push argument 0
push argument 0
push constant 32
call Math.divide 2
sub
return
function Map.converttoY 0
push argument 0
push constant 32
call Math.divide 2
return
function Map.converttoIndex 0
push argument 1
push constant 32
call Math.multiply 2
push argument 0
add
return
function Map.configmap 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 15
lt
push constant 32
call Math.multiply 2
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push this 1
lt
not
if-goto WHILE_END1
push local 0
push argument 1
add
pop pointer 1
push that 0
push local 0
push argument 2
add
pop pointer 1
push that 0
call Map.converttoIndex 2
pop local 1
push local 0
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function Map.display 3
push argument 0
pop pointer 0
label WHILE_EXP0
push local 1
push constant 15
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 2
push constant 32
lt
not
if-goto WHILE_END1
push local 1
push local 2
call Map.converttoIndex 2
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 16
push local 1
call Math.multiply 2
push constant 16
push local 2
push constant 1
add
call Math.multiply 2
push constant 16
push local 1
push constant 1
add
call Math.multiply 2
push constant 16
push local 2
push constant 2
add
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 16
push local 1
call Math.multiply 2
push constant 16
push local 2
push constant 1
add
call Math.multiply 2
push constant 16
push local 1
push constant 1
add
call Math.multiply 2
push constant 16
push local 2
push constant 2
add
call Math.multiply 2
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
goto WHILE_EXP1
label WHILE_END1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
